package cmd

import (
    "log"
    "os"
    "time"

    "github.com/joho/godotenv"
    "github.com/spf13/cobra"
    tele "gopkg.in/telebot.v4"
)

// ‚ú® –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î .env –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –ø–∞–∫–µ—Ç—É
func init() {
    err := godotenv.Load()
    if err != nil {
        log.Println(".env —Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏")
    }
}

// üîß –ì–æ–ª–æ–≤–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ CLI
var rootCmd = &cobra.Command{
    Use:   "telegram-bot",
    Short: "Telegram bot powered by Go",
    Run: func(cmd *cobra.Command, args []string) {
        token := os.Getenv("TELE_TOKEN")
        if token == "" {
            log.Fatal("TELE_TOKEN is not set")
        }

        bot, err := tele.NewBot(tele.Settings{
            Token:  token,
            Poller: &tele.LongPoller{Timeout: 10 * time.Second},
        })
        if err != nil {
            log.Fatal(err)
        }

        bot.Handle("/start", func(c tele.Context) error { 
            return c.Send("–í—ñ—Ç–∞—é, Serhii! –ë–æ—Ç –ø—Ä–∞—Ü—é—î ‚úÖ")
        })

        bot.Handle(tele.OnText, func(c tele.Context) error {
            return c.Send("–ü—Ä–∏–≤—ñ—Ç! –Ø –ø—Ä–∞—Ü—é—é üéâ")
        })

        bot.Start()
    },
}

// üèÅ –í–∏–∫–ª–∏–∫–∞—î –∫–æ–º–∞–Ω–¥—É
func Execute() {
    if err := rootCmd.Execute(); err != nil {
        log.Fatal(err)
    }
}
